<<<<<<< HEAD
# Generated by Django 3.2.12 on 2023-06-01 14:39
=======
# Generated by Django 4.2.1 on 2023-06-04 16:01
>>>>>>> aece57c62075882e887e9383744749aef1908d9c

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('is_driver', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BookRideModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination_location', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_plate_number', models.CharField(max_length=7, unique=True)),
                ('identification_number', models.CharField(max_length=17, unique=True)),
                ('color', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('email', models.EmailField(max_length=254)),
                ('location', models.CharField(max_length=400)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identity_verified', models.BooleanField()),
                ('licence_number', models.CharField(max_length=10, unique=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='commute_share.carmodel')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='commute_share.companymodel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VerificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('MALE', 'male'), ('FEMALE', 'female')], max_length=1000)),
                ('id_card_front', models.ImageField(upload_to='id-card-front/')),
                ('id_card_back', models.ImageField(upload_to='id-card-back/')),
                ('photograph', models.ImageField(upload_to='images1/')),
                ('date_of_birth', models.DateField(default='0000-00-0')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(choices=[('SUCCESS', 'success'), ('PENDING', 'pending'), ('FAILED', 'failed')], max_length=100)),
                ('payment_method', models.CharField(choices=[('BANK TRANSFER', 'transfer'), ('USSD', 'ussd'), ('CARD', 'card')], max_length=100)),
                ('payment_description', models.CharField(blank=True, max_length=100)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='commute_share.bookridemodel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commute_share.drivermodel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='drivermodel',
            name='verification',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='commute_share.verificationmodel'),
        ),
        migrations.CreateModel(
            name='CustomerServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('message', models.CharField(max_length=100)),
                ('response_status', models.CharField(choices=[('open', 'open'), ('in progress', 'progress'), ('closed', 'closed')], default='closed', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CreateRide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_location', models.CharField(max_length=1000)),
                ('destination_location', models.CharField(max_length=100)),
                ('departure_time', models.TimeField(max_length=100)),
                ('available_seats', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commute_share.drivermodel')),
            ],
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_location', models.CharField(max_length=1000)),
                ('destination_location', models.CharField(max_length=100)),
                ('departure_time', models.TimeField(max_length=100)),
                ('available_seats', models.IntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commute_share.drivermodel')),
            ],
        ),
        migrations.AddField(
            model_name='bookridemodel',
            name='create_ride',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='commute_share.createride'),
        ),
    ]
